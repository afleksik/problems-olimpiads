#include <iostream>
#include <vector>
#include <stdio.h>
#include <stdlib.h>

int main() {
    u_int8_t dump[] = {
        0x49, 0x4B, 0x53, 0x49,
        0x5F, 0x45, 0x51, 0x15,
        0x12, 0x34, 0x45, 0x76,
        0x00, 0x00, 0x00, 0x08,


        0x00, 0x00, 0x20, 0x1D, 0x00, 0x00, 0x00, 0x76,
        0x00, 0x00, 0x31, 0xFE, 0x00, 0x00, 0x00, 0x5D,
        0x00, 0x00, 0x3C, 0xB5, 0x00, 0x00, 0x00, 0x61,
        0x00, 0x00, 0x3F, 0x1F, 0x00, 0x00, 0x00, 0x50,
        0x00, 0x00, 0x44, 0xCE, 0x00, 0x00, 0x00, 0x6B,
        0x00, 0x00, 0x4E, 0x33, 0x00, 0x00, 0x00, 0x56,
        0x00, 0x00, 0x76, 0x10, 0x00, 0x00, 0x00, 0x70,
        0x00, 0x00, 0x7E, 0xBD, 0x00, 0x00, 0x00, 0x66,


        0x63, 0x6C, 0x6F, 0x73, 0x65, 0x00,
        0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00,
        0x65, 0x6F, 0x66,0x00, 
        0x73, 0x65, 0x65, 0x6B, 0x00,
        0x6F, 0x70, 0x65, 0x6E, 0x00,
        0x72, 0x65, 0x61, 0x64, 0x00,
        0x70, 0x72, 0x69, 0x6E, 0x74, 0x00,
        0x68, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x00
     };

    struct dump_hdr {
        u_int32_t signature;
        u_int32_t TimeDateStamp;
        u_int32_t CheckSum;
        u_int32_t NumberOfNames;
    };

    struct dump_desc {
        u_int32_t address;
        u_int32_t NameOffset;
    };

    struct dump_hdr *hdr = (struct dump_hdr*)dump;
    struct dump_desc *desc = (struct dump_desc*)(dump + sizeof(struct dump_hdr));

    hdr->signature = __builtin_bswap32(hdr->signature);
    hdr->TimeDateStamp = __builtin_bswap32(hdr->TimeDateStamp);
    hdr->CheckSum = __builtin_bswap32(hdr->CheckSum);
    hdr->NumberOfNames = __builtin_bswap32(hdr->NumberOfNames);

    printf("hdr->signature = %u\n", hdr->signature);
    printf("hdr->TimeDateStamp = %u\n", hdr->TimeDateStamp);
    printf("hdr->CheckSum = %u\n", hdr->CheckSum);
    printf("hdr->NumberOfNames = %u\n\n", hdr->NumberOfNames);

    for (int i = 0; i < hdr->NumberOfNames; ++i)
    {
        desc[i].address = __builtin_bswap32(desc[i].address);
        desc[i].NameOffset = __builtin_bswap32(desc[i].NameOffset);

        printf("desc[%d].address = %x\n", i, desc[i].address);
        printf("desc[%d].NameOffset = %u\n", i, desc[i].NameOffset);
        
        printf("[%s]\n", dump + desc[i].NameOffset);
    }

    return 0;
}

/*

0x49, 0x4B, 0x53, 0x49, 0x5F, 0x45, 0x51, 0x15, 0x12, 0x34, 0x45, 0x76, 0x00, 0x00, 0x00, 0x08,
0x00, 0x00, 0x3F, 0x1F, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x4E, 0x33, 0x00, 0x00, 0x00, 0x56,
0x00, 0x00, 0x31, 0xFE, 0x00, 0x00, 0x00, 0x5D, 0x00, 0x00, 0x3C, 0xB5, 0x00, 0x00, 0x00, 0x61,
0x00, 0x00, 0x7E, 0xBD, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x44, 0xCE, 0x00, 0x00, 0x00, 0x6B,
0x00, 0x00, 0x76, 0x10, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x20, 0x1D, 0x00, 0x00, 0x00, 0x76,
0x63, 0x6C, 0x6F, 0x73, 0x65, 0x00, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x65, 0x6F, 0x66,
0x00, 0x73, 0x65, 0x65, 0x6B, 0x00, 0x6F, 0x70, 0x65, 0x6E, 0x00, 0x72, 0x65, 0x61, 0x64, 0x00,
0x70, 0x72, 0x69, 0x6E, 0x74, 0x00, 0x68, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x00



header
0x49, 0x4B, 0x53, 0x49,
0x5F, 0x45, 0x51, 0x15,
0x12, 0x34, 0x45, 0x76,
0x00, 0x00, 0x00, 0x08,


0x00, 0x00, 0x20, 0x1D, 0x00, 0x00, 0x00, 0x76,
0x00, 0x00, 0x31, 0xFE, 0x00, 0x00, 0x00, 0x5D,
0x00, 0x00, 0x3C, 0xB5, 0x00, 0x00, 0x00, 0x61,
0x00, 0x00, 0x3F, 0x1F, 0x00, 0x00, 0x00, 0x50,
0x00, 0x00, 0x44, 0xCE, 0x00, 0x00, 0x00, 0x6B,
0x00, 0x00, 0x4E, 0x33, 0x00, 0x00, 0x00, 0x56,
0x00, 0x00, 0x76, 0x10, 0x00, 0x00, 0x00, 0x70,
0x00, 0x00, 0x7E, 0xBD, 0x00, 0x00, 0x00, 0x66,


0x63, 0x6C, 0x6F, 0x73, 0x65, 0x00,
0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00,
0x65, 0x6F, 0x66,0x00, 
0x73, 0x65, 0x65, 0x6B, 0x00,
0x6F, 0x70, 0x65, 0x6E, 0x00,
0x72, 0x65, 0x61, 0x64, 0x00,
0x70, 0x72, 0x69, 0x6E, 0x74, 0x00,
0x68, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x00

*/
